version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: idea_platform_db_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-idea_platform}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - idea_network_prod
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: idea_platform_redis_prod
    networks:
      - idea_network_prod
    restart: unless-stopped

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: idea_platform_backend_prod
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn idea_platform.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - media_files_prod:/app/media
      - static_files_prod:/app/staticfiles
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - POSTGRES_DB=${POSTGRES_DB:-idea_platform}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    depends_on:
      - db
      - redis
    networks:
      - idea_network_prod
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: idea_platform_celery_prod
    command: celery -A idea_platform worker --loglevel=info
    volumes:
      - media_files_prod:/app/media
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB:-idea_platform}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    depends_on:
      - db
      - redis
    networks:
      - idea_network_prod
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: idea_platform_celery_beat_prod
    command: celery -A idea_platform beat --loglevel=info
    volumes:
      - media_files_prod:/app/media
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB:-idea_platform}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    depends_on:
      - db
      - redis
    networks:
      - idea_network_prod
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: idea_platform_frontend_prod
    environment:
      - VITE_API_URL=/api
    depends_on:
      - backend
    networks:
      - idea_network_prod
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: idea_platform_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_files_prod:/var/www/static
      - media_files_prod:/var/www/media
      - ./ssl:/etc/nginx/ssl  # للشهادات SSL
    depends_on:
      - backend
      - frontend
    networks:
      - idea_network_prod
    restart: unless-stopped

volumes:
  postgres_data_prod:
  media_files_prod:
  static_files_prod:

networks:
  idea_network_prod:
    driver: bridge

